name: Publish Python Package

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # Required for PyPI token

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine python-semantic-release

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Run semantic-release
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          semantic-release version
          semantic-release publish

      - name: Build package
        run: |
          rm -rf dist/ build/ *.egg-info/
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          if [ -n "${{ steps.release.outputs.released }}" ]; then
            python -m twine upload --verbose dist/*
          else
            echo "No new version to release"
          fi

      - name: Handle failure
        if: failure()
        run: |
          echo "::error::Failed to publish package to PyPI"
          exit 1 